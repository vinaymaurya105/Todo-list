{"ast":null,"code":"var _jsxFileName = \"/home/vinay/webdev/MERN-Stack/todo-app/client/src/components/todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/todo.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:8080/todos\";\nconst _todos = {\n  _id: \"\",\n  title: \"\",\n  isDone: true / false\n};\n\nfunction Todo() {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [currentTodo, setCurrentTodo] = useState({\n    title: \"\"\n  });\n  const [todos, setTodos] = useState([]); // true - Editing old item or false - adding new\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [editItem, setEditItem] = useState(null);\n\n  const handleChange = event => {\n    const value = event.target.value; // setText();\n\n    setCurrentTodo(prevState => ({ ...prevState,\n      title: value\n    }));\n  };\n\n  const addTodo = () => {\n    if (text === \"\") {\n      alert(\"Write something first\");\n    } else if (text && !toggleBtn) {\n      setTodos(todos.map(elem => {\n        if (elem._id === editItem) {\n          return { ...elem,\n            title: text\n          };\n        }\n\n        return elem;\n      }));\n      setToggleBtn(true);\n      setText(\"\");\n      setEditItem(null);\n    } else {\n      const newTodo = {\n        _id: Date.now(),\n        title: text\n      };\n      setTodos(() => [newTodo, ...todos]);\n      setText(\"\");\n    }\n  };\n\n  const handleSave = e => {\n    const {\n      code\n    } = e;\n    if (code !== \"Enter\") return;\n    const {\n      title\n    } = currentTodo;\n\n    if (title === \"\") {\n      alert(\"Write something first\");\n      return;\n    }\n\n    axios.post(URL, {\n      title\n    }).then(response => {\n      const {\n        _id,\n        title\n      } = response.data;\n      setTodos(prevState => [{\n        _id,\n        title\n      }, ...prevState]);\n      setCurrentTodo({\n        title: \"\"\n      });\n    }).catch(err => console.log(err)); //   if (text && !toggleBtn) {\n    //     setTodos(\n    //       todos.map((elem) => {\n    //         if (elem._id === editItem) {\n    //           return { ...elem, title: text };\n    //         }\n    //         return elem;\n    //       })\n    //     );\n    //     setToggleBtn(true);\n    //     setText(\"\");\n    //     setEditItem(null);\n    //   } else {\n    //     setTodos((prevState) => [newTodo, ...prevState]);\n    //     setText(\"\");\n    //   }\n    // }\n  };\n\n  const handleDelete = id => {\n    const deleteURL = `${URL}/${id}`;\n    axios.delete(deleteURL).then(response => {\n      console.log(response.data);\n      const updateTodo = todos.filter(todo => todo._id !== id);\n      setTodos(updateTodo);\n    }).catch(err => console.log(err));\n  };\n\n  const handleEditSave = () => {\n    // Saving edited\n    const {\n      _id,\n      title\n    } = currentTodo;\n    const updateUrl = `${URL}/${_id}`;\n    axios.patch(updateUrl, {\n      title\n    }).then(() => {\n      setTodos(prevState => prevState.map(todo => todo._id === _id ? {\n        _id,\n        title\n      } : todo));\n      setCurrentTodo({\n        title: \"\"\n      });\n      setIsEditing(false);\n    }).catch(err => console.log(err));\n    console.log(currentTodo);\n  };\n\n  const handleEdit = _id => {\n    const updateTodo = todos.find(todo => todo._id === _id);\n    setCurrentTodo(updateTodo);\n    setIsEditing(true);\n  };\n\n  const handleStatusUpdate = id => {\n    const updatedTodos = todos.map(todo => todo._id === id ? { ...todo,\n      done: true\n    } : todo);\n    setTodos(updatedTodos);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/todos\").then(res => {\n      setTodos(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Todo List by using MERN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-methode\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-data\",\n        type: \"text\",\n        placeholder: \"write todo here\",\n        value: currentTodo.title,\n        onChange: handleChange,\n        onKeyDownCapture: handleSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-lg fa-pencil-square-o addBtn\",\n        \"aria-hidden\": \"true\",\n        onClick: handleEditSave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa  fa-lg fa-plus addBtn \",\n        \"aria-hidden\": \"true\",\n        onClick: () => handleSave({\n          code: \"Enter\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-div\",\n      children: todos.map(todo => {\n        const {\n          _id,\n          title,\n          done = false\n        } = todo;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"check\",\n            checked: done,\n            onChange: () => handleStatusUpdate(_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: done ? \"line-through\" : \"\"\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-lg fa-trash delBtn\",\n            \"aria-hidden\": \"true\",\n            onClick: () => handleDelete(_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-lg fa-pencil-square-o editBtn\",\n            \"aria-hidden\": \"true\",\n            onClick: () => handleEdit(_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"u1VIo5HAXpgqIbjU/aq+ot+Axhs=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/vinay/webdev/MERN-Stack/todo-app/client/src/components/todo.jsx"],"names":["React","useState","useEffect","axios","URL","_todos","_id","title","isDone","Todo","text","setText","currentTodo","setCurrentTodo","todos","setTodos","isEditing","setIsEditing","toggleBtn","setToggleBtn","editItem","setEditItem","handleChange","event","value","target","prevState","addTodo","alert","map","elem","newTodo","Date","now","handleSave","e","code","post","then","response","data","catch","err","console","log","handleDelete","id","deleteURL","delete","updateTodo","filter","todo","handleEditSave","updateUrl","patch","handleEdit","find","handleStatusUpdate","updatedTodos","done","get","res","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/todo.css\";\nimport axios from \"axios\";\n\nconst URL = \"http://localhost:8080/todos\";\n\nconst _todos = {\n  _id: \"\",\n  title: \"\",\n  isDone: true / false,\n};\n\nfunction Todo() {\n  const [text, setText] = useState(\"\");\n\n  const [currentTodo, setCurrentTodo] = useState({ title: \"\" });\n  const [todos, setTodos] = useState([]);\n\n  // true - Editing old item or false - adding new\n  const [isEditing, setIsEditing] = useState(false);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [editItem, setEditItem] = useState(null);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    // setText();\n    setCurrentTodo((prevState) => ({\n      ...prevState,\n      title: value,\n    }));\n  };\n\n  const addTodo = () => {\n    if (text === \"\") {\n      alert(\"Write something first\");\n    } else if (text && !toggleBtn) {\n      setTodos(\n        todos.map((elem) => {\n          if (elem._id === editItem) {\n            return { ...elem, title: text };\n          }\n          return elem;\n        })\n      );\n      setToggleBtn(true);\n      setText(\"\");\n      setEditItem(null);\n    } else {\n      const newTodo = {\n        _id: Date.now(),\n        title: text,\n      };\n\n      setTodos(() => [newTodo, ...todos]);\n      setText(\"\");\n    }\n  };\n\n  const handleSave = (e) => {\n    const { code } = e;\n\n    if (code !== \"Enter\") return;\n\n    const { title } = currentTodo;\n\n    if (title === \"\") {\n      alert(\"Write something first\");\n      return;\n    }\n\n    axios\n      .post(URL, { title })\n      .then((response) => {\n        const { _id, title } = response.data;\n        setTodos((prevState) => [{ _id, title }, ...prevState]);\n        setCurrentTodo({ title: \"\" });\n      })\n      .catch((err) => console.log(err));\n\n    //   if (text && !toggleBtn) {\n    //     setTodos(\n    //       todos.map((elem) => {\n    //         if (elem._id === editItem) {\n    //           return { ...elem, title: text };\n    //         }\n    //         return elem;\n    //       })\n    //     );\n    //     setToggleBtn(true);\n    //     setText(\"\");\n    //     setEditItem(null);\n    //   } else {\n    //     setTodos((prevState) => [newTodo, ...prevState]);\n    //     setText(\"\");\n    //   }\n    // }\n  };\n\n  const handleDelete = (id) => {\n    const deleteURL = `${URL}/${id}`;\n    axios\n      .delete(deleteURL)\n      .then((response) => {\n        console.log(response.data);\n        const updateTodo = todos.filter((todo) => todo._id !== id);\n        setTodos(updateTodo);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleEditSave = () => {\n    // Saving edited\n    const { _id, title } = currentTodo;\n\n    const updateUrl = `${URL}/${_id}`;\n    axios\n      .patch(updateUrl, { title })\n      .then(() => {\n        setTodos((prevState) =>\n          prevState.map((todo) => (todo._id === _id ? { _id, title } : todo))\n        );\n        setCurrentTodo({ title: \"\" });\n        setIsEditing(false);\n      })\n      .catch((err) => console.log(err));\n\n    console.log(currentTodo);\n  };\n\n  const handleEdit = (_id) => {\n    const updateTodo = todos.find((todo) => todo._id === _id);\n    setCurrentTodo(updateTodo);\n    setIsEditing(true);\n  };\n\n  const handleStatusUpdate = (id) => {\n    const updatedTodos = todos.map((todo) =>\n      todo._id === id ? { ...todo, done: true } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/todos\")\n      .then((res) => {\n        setTodos(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"header\">Todo List by using MERN</h1>\n\n      <div className=\"input-methode\">\n        <input\n          className=\"input-data\"\n          type=\"text\"\n          placeholder=\"write todo here\"\n          value={currentTodo.title}\n          onChange={handleChange}\n          onKeyDownCapture={handleSave}\n        />\n        {isEditing ? (\n          <i\n            className=\"fa fa-lg fa-pencil-square-o addBtn\"\n            aria-hidden=\"true\"\n            onClick={handleEditSave}\n          ></i>\n        ) : (\n          <i\n            className=\"fa  fa-lg fa-plus addBtn \"\n            aria-hidden=\"true\"\n            onClick={() => handleSave({ code: \"Enter\" })}\n          ></i>\n        )}\n      </div>\n      <div className=\"item-div\">\n        {todos.map((todo) => {\n          const { _id, title, done = false } = todo;\n          return (\n            <div className=\"item-list\" key={todo._id}>\n              <input\n                type=\"checkbox\"\n                className=\"check\"\n                checked={done}\n                onChange={() => handleStatusUpdate(_id)}\n              />\n              <span style={{ textDecoration: done ? \"line-through\" : \"\" }}>\n                {title}\n              </span>\n\n              <i\n                className=\"fa fa-lg fa-trash delBtn\"\n                aria-hidden=\"true\"\n                onClick={() => handleDelete(_id)}\n              ></i>\n\n              <i\n                className=\"fa fa-lg fa-pencil-square-o editBtn\"\n                aria-hidden=\"true\"\n                onClick={() => handleEdit(_id)}\n              ></i>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}